// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async function checkNotifications() {
  if (isShuttingDown) return;
  
  console.log("üëâ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π");
  console.log("üëâ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:", Array.from(userChatIds.entries()));
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
    console.log("üëâ –ó–∞–ø—Ä–æ—Å –∑–∞–¥–∞—á —Å API:", `${apiUrl}/tasks?user_id=1`);
    const response = await axios.get(`${apiUrl}/tasks?user_id=1`);
    const tasks = response.data;
    console.log(`üëâ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–¥–∞—á: ${tasks.length}`);
    
    // –í—ã–≤–æ–¥–∏–º –∑–∞–¥–∞—á–∏ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    const tasksWithNotifications = tasks.filter(task => 
      !task.done && task.due_date && task.due_time && task.notification
    );
    console.log(`üëâ –ó–∞–¥–∞—á–∏ —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏:`, 
      tasksWithNotifications.map(t => ({
        id: t.id,
        title: t.title,
        due_date: t.due_date,
        due_time: t.due_time,
        notification: t.notification
      }))
    );
    
    // –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
    const now = new Date();
    const currentDate = now.toISOString().split('T')[0]; // YYYY-MM-DD
    const currentHour = now.getHours();
    const currentMinute = now.getMinutes();
    console.log(`üëâ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${currentDate} ${currentHour}:${currentMinute}`);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å
    for (const task of tasks) {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
      if (task.done) {
        console.log(`üëâ –ó–∞–¥–∞—á–∞ "${task.title}" (${task.id}) –ø—Ä–æ–ø—É—â–µ–Ω–∞ - —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞`);
        continue;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–¥–∞—á–∏ —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
      if (!task.due_date || !task.due_time || !task.notification) {
        console.log(`üëâ –ó–∞–¥–∞—á–∞ "${task.title}" (${task.id}) –ø—Ä–æ–ø—É—â–µ–Ω–∞ - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∞—Ç–∞, –≤—Ä–µ–º—è –∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ`);
        continue;
      }
      
      console.log(`üëâ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É: "${task.title}" (${task.id}), —Å—Ä–æ–∫: ${task.due_date} ${task.due_time}, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${task.notification}`);
      
      // –†–∞–∑–±–∏—Ä–∞–µ–º –≤—Ä–µ–º—è –∑–∞–¥–∞—á–∏
      const [taskHour, taskMinute] = task.due_time.split(':').map(Number);
      
      // –í—Ä–µ–º—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      let notificationTime = new Date(`${task.due_date}T${task.due_time}`);
      console.log(`üëâ –ò—Å—Ö–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–¥–∞—á–∏: ${notificationTime.toISOString()}`);
      
      switch (task.notification) {
        case '–ó–∞ 5 –º–∏–Ω—É—Ç':
          notificationTime.setMinutes(notificationTime.getMinutes() - 5);
          break;
        case '–ó–∞ 10 –º–∏–Ω—É—Ç':
          notificationTime.setMinutes(notificationTime.getMinutes() - 10);
          break;
        case '–ó–∞ 15 –º–∏–Ω—É—Ç':
          notificationTime.setMinutes(notificationTime.getMinutes() - 15);
          break;
        case '–ó–∞ 30 –º–∏–Ω—É—Ç':
          notificationTime.setMinutes(notificationTime.getMinutes() - 30);
          break;
        case '–ó–∞ 1 —á–∞—Å':
          notificationTime.setHours(notificationTime.getHours() - 1);
          break;
        case '–ó–∞ 2 —á–∞—Å–∞':
          notificationTime.setHours(notificationTime.getHours() - 2);
          break;
        case '–ó–∞ –¥–µ–Ω—å':
          notificationTime.setDate(notificationTime.getDate() - 1);
          break;
      }
      
      console.log(`üëâ –†–∞—Å—á–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${notificationTime.toISOString()}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—É–ø–∏–ª–æ –ª–∏ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      // –î–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –≤ 2 –º–∏–Ω—É—Ç—ã (—Ç.–µ. –ø—Ä–æ–≤–µ—Ä—è–µ–º ¬±2 –º–∏–Ω—É—Ç—ã –æ—Ç —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
      const notificationHour = notificationTime.getHours();
      const notificationMinute = notificationTime.getMinutes();
      const notificationDate = notificationTime.toISOString().split('T')[0];
      
      console.log(`üëâ –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º: –¢–µ–∫—É—â–µ–µ [${currentDate} ${currentHour}:${currentMinute}] vs –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ [${notificationDate} ${notificationHour}:${notificationMinute}]`);
      
      // –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç—ã –¥–ª—è –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
      const currentTotalMinutes = currentHour * 60 + currentMinute;
      const notificationTotalMinutes = notificationHour * 60 + notificationMinute;
      const timeDifference = Math.abs(currentTotalMinutes - notificationTotalMinutes);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –±–ª–∏–∑–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏ (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 2 –º–∏–Ω—É—Ç)
      if (currentDate === notificationDate && timeDifference <= 2) {
        console.log(`üëâ ‚úÖ –°–û–í–ü–ê–î–ï–ù–ò–ï! –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∑–∞–¥–∞—á–∏ "${task.title}" (${task.id}). –†–∞–∑–Ω–∏—Ü–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–∏: ${timeDifference} –º–∏–Ω.`);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ –∑–Ω–∞–µ–º –µ–≥–æ chat_id
        const userId = task.user_id || 1;
        const chatId = userChatIds.get(userId);
        
        if (chatId) {
          console.log(`üëâ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å chat_id: ${chatId}`);
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ Markdown –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫
          let message = `üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–¥–∞—á–µ!\n\n`;
          message += `${task.title}\n`;
          
          if (task.description) {
            message += `${task.description}\n\n`;
          }
          
          message += `üìÖ –°—Ä–æ–∫: ${task.due_date}\n`;
          message += `‚è∞ –í—Ä–µ–º—è: ${task.due_time}\n`;
          
          bot.sendMessage(chatId, message, {
            reply_markup: {
              inline_keyboard: [
                [{ text: '‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π', callback_data: `complete_task_${task.id}` }],
                [{ text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏', web_app: { url: `${webAppUrl}/edit-task/${task.id}` } }]
              ]
            }
          }).then(() => {
            console.log(`üëâ ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ`);
          }).catch(err => {
            console.error(`üëâ ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–¥–∞—á–∏ ${task.id}:`, err.message);
          });
        } else {
          console.log(`üëâ ‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ chat_id –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${userId}`);
        }
      } else {
        console.log(`üëâ ‚ùå –í—Ä–µ–º—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º`);
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error.message);
    if (error.response) {
      console.error('‚ùå –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', error.response.data);
    }
  } finally {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É, –µ—Å–ª–∏ –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω
    if (!isShuttingDown) {
      console.log(`üëâ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥`);
      setTimeout(checkNotifications, 60000); // 1 –º–∏–Ω—É—Ç–∞
    }
  }
} 

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /notification –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
bot.onText(/\/notification/, (msg) => {
  const chatId = msg.chat.id;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  userChatIds.set(1, chatId);
  console.log(`üëâ –°–æ—Ö—Ä–∞–Ω–µ–Ω chat_id ${chatId} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1`);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  bot.sendMessage(chatId, "‚è±Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...");
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  const now = new Date();
  const testTask = {
    id: "test-" + Date.now(),
    title: "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞",
    description: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
    due_date: now.toISOString().split('T')[0],
    due_time: `${now.getHours()}:${now.getMinutes()}`,
    notification: "–ó–∞ 5 –º–∏–Ω—É—Ç",
    user_id: 1
  };
  
  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ –æ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–¥–∞—á–µ
  let message = `üîî –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n\n`;
  message += `${testTask.title}\n`;
  message += `${testTask.description}\n\n`;
  message += `üìÖ –°—Ä–æ–∫: ${testTask.due_date}\n`;
  message += `‚è∞ –í—Ä–µ–º—è: ${testTask.due_time}\n`;
  
  // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  bot.sendMessage(chatId, message, {
    reply_markup: {
      inline_keyboard: [
        [{ text: '‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π', callback_data: `test_notification` }],
        [{ text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', web_app: { url: webAppUrl } }]
      ]
    }
  }).then(() => {
    console.log(`üëâ ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}`);
    bot.sendMessage(chatId, "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!");
  }).catch(err => {
    console.error(`üëâ ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:`, err);
    bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${err.message}`);
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /force_notification –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–¥–∞—á–µ
bot.onText(/\/force_notification (.+)/, async (msg, match) => {
  const chatId = msg.chat.id;
  const taskId = match[1]; // ID –∑–∞–¥–∞—á–∏ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  userChatIds.set(1, chatId);
  console.log(`üëâ –°–æ—Ö—Ä–∞–Ω–µ–Ω chat_id ${chatId} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1`);
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
    const response = await axios.get(`${apiUrl}/tasks/${taskId}`);
    const task = response.data;
    
    if (!task) {
      bot.sendMessage(chatId, `‚ùå –ó–∞–¥–∞—á–∞ —Å ID ${taskId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      return;
    }
    
    console.log(`üëâ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–¥–∞—á–∏:`, task);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    let message = `üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–¥–∞—á–µ!\n\n`;
    message += `${task.title}\n`;
    
    if (task.description) {
      message += `${task.description}\n\n`;
    }
    
    if (task.due_date) message += `üìÖ –°—Ä–æ–∫: ${task.due_date}\n`;
    if (task.due_time) message += `‚è∞ –í—Ä–µ–º—è: ${task.due_time}\n`;
    
    bot.sendMessage(chatId, message, {
      reply_markup: {
        inline_keyboard: [
          [{ text: '‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π', callback_data: `complete_task_${task.id}` }],
          [{ text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏', web_app: { url: `${webAppUrl}/edit-task/${task.id}` } }]
        ]
      }
    });
    
    bot.sendMessage(chatId, `‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∑–∞–¥–∞—á–∏ "${task.title}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏:', error);
    bot.sendMessage(chatId, `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ ID –∑–∞–¥–∞—á–∏
bot.onText(/^\/force_notification$/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∑–∞–¥–∞—á–∏: /force_notification ID_–ó–ê–î–ê–ß–ò');
});

// –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
bot.onText(/\/command/, (msg) => {
  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –±–æ—Ç–∞
  bot.setMyCommands([
    { command: '/start', description: '–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º' },
    { command: '/help', description: '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥' },
    { command: '/tasks', description: '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á' },
    { command: '/add', description: '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É' },
    { command: '/webapp', description: '–û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' },
    { command: '/test', description: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' },
    { command: '/notification', description: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ' },
    { command: '/force_notification', description: '–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–¥–∞—á–µ' }
  ]).then(() => {
    bot.sendMessage(msg.chat.id, '–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
  }).catch((error) => {
    bot.sendMessage(msg.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥: ' + error.message);
  });
}); 