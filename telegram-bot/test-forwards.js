require('dotenv').config();
const axios = require('axios');

const apiUrl = process.env.API_URL || 'https://taskdrop-render-backend.onrender.com';

// –≠–º—É–ª—è—Ü–∏—è callbackQuery –æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –¥–ª—è –∑–∞–¥–∞—á –∏–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
const testCallback = {
  from: {
    id: 25278733, // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID
    first_name: 'Test',
    username: 'test_user'
  },
  message: {
    chat: {
      id: 25278733 // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID (–¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å from.id)
    }
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function getOrCreateUser(msg) {
  try {
    const telegramUser = msg.from;
    
    console.log(`üëâ DEBUG: getOrCreateUser –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å Telegram ID: ${telegramUser.id}, –∏–º—è: ${telegramUser.first_name}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    const response = await axios.get(`${apiUrl}/users/telegram/${telegramUser.id}`);
    
    if (response.status === 200 && !response.data.error) {
      console.log(`üëâ ‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${telegramUser.first_name} (ID: ${response.data.id})`);
      console.log(`üëâ DEBUG: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã:`, JSON.stringify(response.data));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ Telegram ID
      if (response.data.id !== telegramUser.id) {
        console.log(`üëâ ‚ö†Ô∏è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${response.data.id}) –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –µ–≥–æ Telegram ID (${telegramUser.id})`);
        
        try {
          // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Telegram ID –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ ID
          const updateResponse = await axios.put(`${apiUrl}/users/${response.data.id}`, {
            id: telegramUser.id,
            telegram_id: telegramUser.id
          });
          
          if (updateResponse.status === 200) {
            console.log(`üëâ ‚úÖ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${telegramUser.id}`);
            console.log(`üëâ DEBUG: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`, JSON.stringify(updateResponse.data));
            return updateResponse.data;
          }
        } catch (updateError) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', updateError);
          console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', updateError.response ? updateError.response.data : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ response');
        }
      }
      
      return response.data;
    }
  } catch (error) {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ
    console.log(`üëâ ‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ...`);
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response ? error.response.data : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ response');
  }
  
  try {
    const telegramUser = msg.from;
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userData = {
      id: telegramUser.id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram ID –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π ID
      telegram_id: telegramUser.id,
      first_name: telegramUser.first_name,
      last_name: telegramUser.last_name,
      username: telegramUser.username
    };
    
    console.log(`üëâ DEBUG: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∞–Ω–Ω—ã–º–∏:`, JSON.stringify(userData));
    
    const createResponse = await axios.post(`${apiUrl}/users`, userData);
    
    if (createResponse.status === 200 || createResponse.status === 201) {
      console.log(`üëâ ‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${telegramUser.first_name} (ID: ${createResponse.data.id})`);
      console.log(`üëâ DEBUG: –î–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`, JSON.stringify(createResponse.data));
      return createResponse.data;
    }
    
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  } catch (createError) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', createError);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', createError.response ? createError.response.data : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ response');
    
    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const telegramUser = msg.from;
    const defaultUser = {
      id: telegramUser.id,
      telegram_id: telegramUser.id,
      first_name: telegramUser.first_name,
      last_name: telegramUser.last_name,
      username: telegramUser.username
    };
    
    console.log(`üëâ DEBUG: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`, JSON.stringify(defaultUser));
    return defaultUser;
  }
}

// –§—É–Ω–∫—Ü–∏—è, —ç–º—É–ª–∏—Ä—É—é—â–∞—è —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function createTaskFromForward() {
  try {
    console.log(`üëâ DEBUG: –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ –∏–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è`);
    const chatId = testCallback.message.chat.id;
    const taskTitle = "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –∏–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è";
    
    console.log(`üëâ DEBUG: –î–∞–Ω–Ω—ã–µ telegramUser:`, JSON.stringify(testCallback.from));
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é getOrCreateUser
    const user = await getOrCreateUser({
      chat: { id: chatId },
      from: testCallback.from
    });
    
    console.log(`üëâ DEBUG: –†–µ–∑—É–ª—å—Ç–∞—Ç getOrCreateUser:`, JSON.stringify(user));
    console.log(`üëâ DEBUG: user_id –∏–∑ getOrCreateUser: ${user.id}`);
    
    // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const taskData = {
      user_id: user.id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      title: taskTitle,
      description: "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞, —Å–æ–∑–¥–∞–Ω–Ω–∞—è —Å –ø–æ–º–æ—â—å—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞",
      due_date: new Date().toISOString().split('T')[0], // –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞ –∫–∞–∫ —Å—Ä–æ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      priority: "medium"
    };
    
    console.log(`üëâ DEBUG: –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏:`, JSON.stringify(taskData));
    console.log(`üëâ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.first_name} (ID: ${user.id})`);
    
    const response = await axios.post(`${apiUrl}/tasks`, taskData);
    
    console.log('üëâ DEBUG: –û—Ç–≤–µ—Ç API:', JSON.stringify(response.data));
    console.log(`üëâ DEBUG: ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏: ${response.data.id}, user_id: ${response.data.user_id}`);
    
    if (response.data && response.data.id) {
      console.log(`üëâ ‚úÖ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: ${response.data.id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: ${response.data.user_id}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º user_id
      console.log(`üëâ DEBUG: –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∑–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º user_id`);
      console.log(`üëâ –û–∂–∏–¥–∞–µ–º—ã–π user_id: ${user.id}`);
      console.log(`üëâ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π user_id –≤ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ: ${response.data.user_id}`);
      
      if (response.data.user_id == user.id) {
        console.log(`üëâ ‚úÖ –£–°–ü–ï–•: user_id –≤ –∑–∞–¥–∞—á–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`);
      } else {
        console.log(`üëâ ‚ùå –û–®–ò–ë–ö–ê: user_id –≤ –∑–∞–¥–∞—á–µ (${response.data.user_id}) –ù–ï —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${user.id})`);
      }
      
      return response.data;
    } else {
      console.error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç API:', response.data);
      throw new Error('–û—Ç–≤–µ—Ç API –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏:', error);
    console.error('–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ:', error.response ? error.response.data : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ response');
  }
}

// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
createTaskFromForward()
  .then(result => {
    console.log('‚û°Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    if (result) {
      console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');
    } else {
      console.log('‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É');
    }
  })
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }); 
const axios = require('axios');

const apiUrl = process.env.API_URL || 'https://taskdrop-render-backend.onrender.com';

// –≠–º—É–ª—è—Ü–∏—è callbackQuery –æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –¥–ª—è –∑–∞–¥–∞—á –∏–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
const testCallback = {
  from: {
    id: 25278733, // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID
    first_name: 'Test',
    username: 'test_user'
  },
  message: {
    chat: {
      id: 25278733 // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID (–¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å from.id)
    }
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function getOrCreateUser(msg) {
  try {
    const telegramUser = msg.from;
    
    console.log(`üëâ DEBUG: getOrCreateUser –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å Telegram ID: ${telegramUser.id}, –∏–º—è: ${telegramUser.first_name}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    const response = await axios.get(`${apiUrl}/users/telegram/${telegramUser.id}`);
    
    if (response.status === 200 && !response.data.error) {
      console.log(`üëâ ‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${telegramUser.first_name} (ID: ${response.data.id})`);
      console.log(`üëâ DEBUG: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã:`, JSON.stringify(response.data));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ Telegram ID
      if (response.data.id !== telegramUser.id) {
        console.log(`üëâ ‚ö†Ô∏è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${response.data.id}) –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –µ–≥–æ Telegram ID (${telegramUser.id})`);
        
        try {
          // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Telegram ID –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ ID
          const updateResponse = await axios.put(`${apiUrl}/users/${response.data.id}`, {
            id: telegramUser.id,
            telegram_id: telegramUser.id
          });
          
          if (updateResponse.status === 200) {
            console.log(`üëâ ‚úÖ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${telegramUser.id}`);
            console.log(`üëâ DEBUG: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`, JSON.stringify(updateResponse.data));
            return updateResponse.data;
          }
        } catch (updateError) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', updateError);
          console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', updateError.response ? updateError.response.data : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ response');
        }
      }
      
      return response.data;
    }
  } catch (error) {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ
    console.log(`üëâ ‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ...`);
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response ? error.response.data : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ response');
  }
  
  try {
    const telegramUser = msg.from;
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userData = {
      id: telegramUser.id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram ID –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π ID
      telegram_id: telegramUser.id,
      first_name: telegramUser.first_name,
      last_name: telegramUser.last_name,
      username: telegramUser.username
    };
    
    console.log(`üëâ DEBUG: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∞–Ω–Ω—ã–º–∏:`, JSON.stringify(userData));
    
    const createResponse = await axios.post(`${apiUrl}/users`, userData);
    
    if (createResponse.status === 200 || createResponse.status === 201) {
      console.log(`üëâ ‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${telegramUser.first_name} (ID: ${createResponse.data.id})`);
      console.log(`üëâ DEBUG: –î–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`, JSON.stringify(createResponse.data));
      return createResponse.data;
    }
    
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  } catch (createError) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', createError);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', createError.response ? createError.response.data : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ response');
    
    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const telegramUser = msg.from;
    const defaultUser = {
      id: telegramUser.id,
      telegram_id: telegramUser.id,
      first_name: telegramUser.first_name,
      last_name: telegramUser.last_name,
      username: telegramUser.username
    };
    
    console.log(`üëâ DEBUG: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`, JSON.stringify(defaultUser));
    return defaultUser;
  }
}

// –§—É–Ω–∫—Ü–∏—è, —ç–º—É–ª–∏—Ä—É—é—â–∞—è —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function createTaskFromForward() {
  try {
    console.log(`üëâ DEBUG: –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ –∏–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è`);
    const chatId = testCallback.message.chat.id;
    const taskTitle = "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –∏–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è";
    
    console.log(`üëâ DEBUG: –î–∞–Ω–Ω—ã–µ telegramUser:`, JSON.stringify(testCallback.from));
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é getOrCreateUser
    const user = await getOrCreateUser({
      chat: { id: chatId },
      from: testCallback.from
    });
    
    console.log(`üëâ DEBUG: –†–µ–∑—É–ª—å—Ç–∞—Ç getOrCreateUser:`, JSON.stringify(user));
    console.log(`üëâ DEBUG: user_id –∏–∑ getOrCreateUser: ${user.id}`);
    
    // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const taskData = {
      user_id: user.id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      title: taskTitle,
      description: "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞, —Å–æ–∑–¥–∞–Ω–Ω–∞—è —Å –ø–æ–º–æ—â—å—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞",
      due_date: new Date().toISOString().split('T')[0], // –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞ –∫–∞–∫ —Å—Ä–æ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      priority: "medium"
    };
    
    console.log(`üëâ DEBUG: –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏:`, JSON.stringify(taskData));
    console.log(`üëâ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.first_name} (ID: ${user.id})`);
    
    const response = await axios.post(`${apiUrl}/tasks`, taskData);
    
    console.log('üëâ DEBUG: –û—Ç–≤–µ—Ç API:', JSON.stringify(response.data));
    console.log(`üëâ DEBUG: ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏: ${response.data.id}, user_id: ${response.data.user_id}`);
    
    if (response.data && response.data.id) {
      console.log(`üëâ ‚úÖ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: ${response.data.id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: ${response.data.user_id}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º user_id
      console.log(`üëâ DEBUG: –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∑–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º user_id`);
      console.log(`üëâ –û–∂–∏–¥–∞–µ–º—ã–π user_id: ${user.id}`);
      console.log(`üëâ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π user_id –≤ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ: ${response.data.user_id}`);
      
      if (response.data.user_id == user.id) {
        console.log(`üëâ ‚úÖ –£–°–ü–ï–•: user_id –≤ –∑–∞–¥–∞—á–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`);
      } else {
        console.log(`üëâ ‚ùå –û–®–ò–ë–ö–ê: user_id –≤ –∑–∞–¥–∞—á–µ (${response.data.user_id}) –ù–ï —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${user.id})`);
      }
      
      return response.data;
    } else {
      console.error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç API:', response.data);
      throw new Error('–û—Ç–≤–µ—Ç API –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏:', error);
    console.error('–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ:', error.response ? error.response.data : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ response');
  }
}

// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
createTaskFromForward()
  .then(result => {
    console.log('‚û°Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    if (result) {
      console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');
    } else {
      console.log('‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É');
    }
  })
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }); 
 
 